// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using mobilityAI.Models;

namespace mobilityAI.Migrations
{
    [DbContext(typeof(MobilityAIContext))]
    [Migration("20190127210310_mobilityAI")]
    partial class mobilityAI
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("mobilityAI.Models.Accelerometer", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Elapsed");

                    b.Property<long>("Epoch");

                    b.Property<int>("PatientId");

                    b.Property<DateTime>("Timestamp");

                    b.Property<double>("XAxis");

                    b.Property<double>("YAxis");

                    b.Property<double>("ZAxis");

                    b.HasKey("Id");

                    b.ToTable("AccelerometerData");
                });

            modelBuilder.Entity("mobilityAI.Models.Activity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DeviceId")
                        .IsRequired();

                    b.Property<long>("End");

                    b.Property<int>("PatientId");

                    b.Property<long>("Start");

                    b.Property<short>("Type");

                    b.HasKey("Id");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("mobilityAI.Models.Condition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.ToTable("Conditions");

                    b.HasData(
                        new { Id = 1, Text = "Neurologic" },
                        new { Id = 2, Text = "Cardiopulmonary" },
                        new { Id = 3, Text = "Major Medical Condition" },
                        new { Id = 4, Text = "Other" }
                    );
                });

            modelBuilder.Entity("mobilityAI.Models.Device", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FriendlyName")
                        .IsRequired();

                    b.Property<DateTime>("LastSync");

                    b.Property<int>("PatientID");

                    b.HasKey("Id");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("mobilityAI.Models.Gyroscope", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Elapsed");

                    b.Property<long>("Epoch");

                    b.Property<int>("PatientId");

                    b.Property<DateTime>("Timestamp");

                    b.Property<double>("XAxis");

                    b.Property<double>("YAxis");

                    b.Property<double>("ZAxis");

                    b.HasKey("Id");

                    b.ToTable("GyroscopeData");
                });

            modelBuilder.Entity("mobilityAI.Models.LivingSituation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.ToTable("LivingSituations");
                });

            modelBuilder.Entity("mobilityAI.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DeviceId");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("mobilityAI.Models.Severity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.ToTable("Severities");

                    b.HasData(
                        new { Id = 1, Text = "Mildly Severe" },
                        new { Id = 2, Text = "Moderately Severe" },
                        new { Id = 3, Text = "Extremely Severe" }
                    );
                });

            modelBuilder.Entity("mobilityAI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("Salt")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("mobilityAI.Models.WalkingSituation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.ToTable("WalkingSituations");
                });
#pragma warning restore 612, 618
        }
    }
}
